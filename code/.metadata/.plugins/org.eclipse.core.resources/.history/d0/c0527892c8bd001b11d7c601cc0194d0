package kr.ac.kopo.day18;

import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;

public class AppServerMain {
	public static void main(String[] args) {
		try {
			ServerSocket server = new ServerSocket(10000);// 네트워크는 예외처리 필요함
			System.out.println("어플리케이션 서버 실행...");
			
			
			/*
			서버는 terminate되지 않고 계속 실행중이어야 요청이 들어왔을때 바로바로 소켓을 만들어줄 수 있다. 
			이 역할은 accept() 메소드가 실행한다. 
			 */
			
			 Socket client = server.accept(); // accept()가 실행되면 계속 기다리고 있는 상태, 접속한 클라이언트 소켓을 반환한다.
			 System.out.println("연결된 클라이언트의 정보 : "+client);
			 System.out.println("연결된 클라이언트의 IP : "+client.getInetAddress());
			 System.out.println("연결된 클라이언트의 IP : "+client.getPort());
			 
		} catch (IOException e) {
			e.printStackTrace();
		} 
	}
}
